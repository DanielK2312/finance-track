tables:
  create-banking-table: |
    CREATE TABLE checking_account_records (
        record_id               INT auto_increment primary key,
        transaction_description varchar(255)   not null,
        transaction_date        DATE           not null,
        transaction_type        varchar(255)   not null,
        transaction_amount      decimal(10, 2) not null,
        balance                 decimal(10, 2) not null
    );
  create-credit-table: |
    CREATE TABLE credit_records (
        record_id               INT auto_increment primary key,
        parent_id               INT            null,
        transaction_date        DATE           not null,
        transaction_description varchar(255)   not null,
        transaction_category    varchar(255)   not null,
        transaction_type        varchar(255)   not null,
        transaction_amount      decimal(10, 2) not null,
        constraint foreign key (parent_id) references checking_account_records (record_id) on delete set null
    );

queries:
  map:
    insert-banking-records: |
      INSERT INTO checking_account_records (transaction_description, transaction_date, transaction_type, 
      transaction_amount, balance) 
      VALUES(:transactionDescription, :transactionDate, :transactionType, :transactionAmount, :balance)

    insert-credit-records: |
      INSERT INTO credit_records (transaction_date, transaction_description, transaction_category, transaction_type, 
      transaction_amount) 
      VALUES(:transactionDate, :transactionDescription, :transactionCategory, :transactionType, :transactionAmount)

    get-banking-record: |
      SELECT * FROM checking_account_records

    get-parent-id-of-transaction: |
      SELECT record_id 
      FROM checking_account_records 
      WHERE transaction_date >= :startDate 
      AND transaction_date <= :endDate 
      AND transaction_description LIKE :description 
      AND transaction_type = :type 
      ORDER BY transaction_amount DESC 
      LIMIT 1

    get-foreign-key-relationship: |
      SELECT 
      cr.transaction_date AS credit_transaction_date,
      cr.transaction_description AS credit_transaction_description,
      cr.transaction_category AS credit_transaction_category,
      cr.transaction_amount AS credit_transaction_amount,
      ca.transaction_amount AS checking_transaction_amount,
      ca.transaction_date AS checking_transaction_date
      FROM
      credit_records cr INNER JOIN checking_account_records ca
      ON cr.parent_id = ca.record_id
      WHERE cr.transaction_date >= :startDate
      AND cr.transaction_date <= :endDate

    update-foreign-key-with-parent-id: |
      UPDATE credit_records 
      SET parent_id = :parentId 
      WHERE transaction_date >= :startDate 
      AND transaction_date <= :endDate 
      AND transaction_type = :type
